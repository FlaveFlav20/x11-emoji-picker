name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  DEBIAN_FRONTEND: noninteractive

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: ${{matrix.image}}
    strategy:
      matrix:
        image: [ubuntu, debian, opensuse/leap]
      fail-fast: false

    steps:
      - name: Install dependencies (Ubuntu / Debian)
        if: startsWith(matrix.image, 'ubuntu') || startsWith(matrix.image, 'debian')
        run: apt update && apt install -y wget file dpkg-shlibdeps fuse g++ cmake qtbase5-dev libicu-dev libxdo-dev
      
      - name: Install dependencies (OpenSUSE)
        if: startsWith(matrix.image, 'opensuse')
        run: zypper install -y tar gzip wget rpm-build gcc-c++ cmake libqt5-qtbase-devel libicu-devel xdotool-devel
      
      - name: Install dependencies .AppImage
        if: startsWith(matrix.image, 'debian')
        run: |
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          cp ./linuxdeployqt-continuous-x86_64.AppImage /usr/bin/linuxdeployqt.AppImage
        
      - uses: actions/checkout@v2

      - name: Configure CMake (Ubuntu / Debian)
        if: startsWith(matrix.image, 'ubuntu') || startsWith(matrix.image, 'debian')
        env:
          CPACK_GENERATOR: DEB
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Configure CMake (OpenSUSE)
        if: startsWith(matrix.image, 'opensuse')
        env:
          CPACK_GENERATOR: RPM
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Package
        run: cd ${{github.workspace}}/build && make package

      - name: Package .AppImage
        if: startsWith(matrix.image, 'debian')
        run: cd ${{github.workspace}}/build && make appimage

      - name: Upload artifact .deb
        if: startsWith(matrix.image, 'ubuntu') || startsWith(matrix.image, 'debian')
        uses: actions/upload-artifact@v2
        with:
          name: x11-emoji-picker.x86_64-${{matrix.image}}.deb
          path: ${{github.workspace}}/build/x11-emoji-picker-x86_64.deb

      - name: Upload artifact .rpm
        if: startsWith(matrix.image, 'opensuse')
        uses: actions/upload-artifact@v2
        with:
          name: x11-emoji-picker.x86_64-${{matrix.image}}.rpm
          path: ${{github.workspace}}/build/x11-emoji-picker-x86_64.rpm

      - name: Upload artifact .AppImage
        if: startsWith(matrix.image, 'debian')
        uses: actions/upload-artifact@v2
        with:
          name: x11-emoji-picker-x86_64-${{matrix.image}}.AppImage
          path: ${{github.workspace}}/build/x11-emoji-picker-dev-x86_64.AppImage

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master')

    steps:
      - name: Create release
        id: create_release
        uses: pajlada/create-release@v2.0.3
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: nightly-build
          backup_tag_name: backup-nightly-build
          release_name: Nightly Release
          body: |
            Nightly Build
          prerelease: true

      - uses: actions/download-artifact@v2.0.10
        with:
          name: x11-emoji-picker-x86_64-ubuntu.deb
          path: linux-cmake/

      - name: Upload release asset (Ubuntu .deb)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: linux-cmake/x11-emoji-picker-x86_64-ubuntu.deb
          asset_name: x11-emoji-picker-x86_64-ubuntu.deb
          asset_content_type: application/vnd.debian.binary-package

      - uses: actions/download-artifact@v2.0.10
        with:
          name: x11-emoji-picker-x86_64-debian.deb
          path: linux-cmake/

      - name: Upload release asset (Debian .deb)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: linux-cmake/x11-emoji-picker-x86_64-debian.deb
          asset_name: x11-emoji-picker-x86_64-debian.deb
          asset_content_type: application/vnd.debian.binary-package

      - uses: actions/download-artifact@v2.0.10
        with:
          name: x11-emoji-picker-x86_64-opensuse.rpm
          path: linux-cmake/

      - name: Upload release asset (OpenSUSE .rpm)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: linux-cmake/x11-emoji-picker-x86_64-opensuse.rpm
          asset_name: x11-emoji-picker-x86_64-opensuse.rpm
          asset_content_type: application/x-rpm

      - uses: actions/download-artifact@v2.0.10
        with:
          name: x11-emoji-picker-dev-x86_64.AppImage
          path: linux-cmake/

      - name: Upload release asset .AppImage
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: linux-cmake/x11-emoji-picker-dev-x86_64.AppImage
          asset_name: x11-emoji-picker-x86_64.AppImage
          asset_content_type: application/x-executable
